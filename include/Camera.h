#ifndef CAMERA_H_
#define CAMERA_H_
#include <ngl/NGLInit.h>
#include <QTime>
#include <QCursor>
#include <ngl/Mat4.h>

//----------------------------------------------------------------------------------------------------------------------
/// @file Camera.h
/// @author Emma Koo
/// @struct Camera
/// @brief A struct to handle the camera parameters which are driven by the mouse and keyboard input
//----------------------------------------------------------------------------------------------------------------------

struct Camera
{
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Qcursor instance (need it to reset the cursor to the center of the screen)
  //----------------------------------------------------------------------------------------------------------------------
  QCursor cursor;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the screen space X coordinate of the cursor
  //----------------------------------------------------------------------------------------------------------------------
  float cursorX;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the screen space X coordinate of the cursor
  //----------------------------------------------------------------------------------------------------------------------
  float cursorY;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if the left mouse button is pressed when dragging
  //----------------------------------------------------------------------------------------------------------------------
  bool zoom = false;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief size (in pixels) of the square that zooms into our image on LMB click
  //----------------------------------------------------------------------------------------------------------------------
  int zoomSize = 250;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief zoomed dimensions
  //----------------------------------------------------------------------------------------------------------------------
  float zoomScale = 5;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the bounding box of the zoom square
  //----------------------------------------------------------------------------------------------------------------------
  glm::vec4 zoomSquare;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if the right mouse button is pressed when dragging
  //----------------------------------------------------------------------------------------------------------------------
  bool rotate = false;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag indicating if the W key was pressed
  //----------------------------------------------------------------------------------------------------------------------
  float translateF = 0;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag indicating if the S key was pressed
  //----------------------------------------------------------------------------------------------------------------------
  float translateB = 0;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag indicating if the A key was pressed
  //----------------------------------------------------------------------------------------------------------------------
  float translateL = 0;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag indicating if the D key was pressed
  //----------------------------------------------------------------------------------------------------------------------
  float translateR = 0;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief total pitch amount
  //----------------------------------------------------------------------------------------------------------------------
  float pitch = -45;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief total yaw amount
  //----------------------------------------------------------------------------------------------------------------------
  float yaw = -90;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the current position of our camera
  //----------------------------------------------------------------------------------------------------------------------
  glm::vec3 pos;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the directional vector of where our camera is looking at
  //----------------------------------------------------------------------------------------------------------------------
  glm::vec3 front;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief where is up
  //----------------------------------------------------------------------------------------------------------------------
  glm::vec3 up;
};

//----------------------------------------------------------------------------------------------------------------------
/// @brief multiplier for the camera rotation with mouse movement
//----------------------------------------------------------------------------------------------------------------------
constexpr float SENSITIVITY = 0.1f;
//----------------------------------------------------------------------------------------------------------------------
/// @brief multiplier for the camera translation with key presses
//----------------------------------------------------------------------------------------------------------------------
constexpr float SPEED = 0.01f;

#endif
